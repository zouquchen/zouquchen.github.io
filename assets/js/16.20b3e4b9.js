(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{339:function(t,a,s){"use strict";s.r(a);var r=s(8),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"java基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java基本数据类型"}},[t._v("#")]),t._v(" Java基本数据类型")]),t._v(" "),a("p",[a("strong",[t._v("变量就是申请内存来存储值")]),t._v("。也就是说，当创建变量的时候，需要在内存中申请空间。")]),t._v(" "),a("p",[t._v("内存管理系统根据变量的类型为变量分配存储空间，分配的空间只能用来储存该类型数据。")]),t._v(" "),a("p",[t._v("Java 的两大数据类型:")]),t._v(" "),a("ul",[a("li",[t._v("内置数据类型")]),t._v(" "),a("li",[t._v("引用数据类型")])]),t._v(" "),a("h2",{attrs:{id:"_1-内置数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-内置数据类型"}},[t._v("#")]),t._v(" 1 内置数据类型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("内置数据类型")]),t._v(" "),a("th",[t._v("对应的包装类")]),t._v(" "),a("th",[t._v("默认值")]),t._v(" "),a("th",[t._v("字节数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("byte")]),t._v(" "),a("td",[t._v("Byte")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("short")]),t._v(" "),a("td",[t._v("Short")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("2")])]),t._v(" "),a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("Integer")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("4")])]),t._v(" "),a("tr",[a("td",[t._v("long")]),t._v(" "),a("td",[t._v("Long")]),t._v(" "),a("td",[t._v("0L")]),t._v(" "),a("td",[t._v("8")])]),t._v(" "),a("tr",[a("td",[t._v("float")]),t._v(" "),a("td",[t._v("Float")]),t._v(" "),a("td",[t._v("0.0f")]),t._v(" "),a("td",[t._v("4")])]),t._v(" "),a("tr",[a("td",[t._v("double")]),t._v(" "),a("td",[t._v("Double")]),t._v(" "),a("td",[t._v("0.0d")]),t._v(" "),a("td",[t._v("8")])]),t._v(" "),a("tr",[a("td",[t._v("char")]),t._v(" "),a("td",[t._v("Character")]),t._v(" "),a("td",[t._v("'u0000'")]),t._v(" "),a("td",[t._v("2")])]),t._v(" "),a("tr",[a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td",[t._v("1bit，实际上使用1或5字节")])])])]),t._v(" "),a("h3",{attrs:{id:"byte"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#byte"}},[t._v("#")]),t._v(" byte")]),t._v(" "),a("ul",[a("li",[t._v("byte 数据类型是8位、有符号的，以二进制补码表示的整数；")]),t._v(" "),a("li",[t._v("最小值是 "),a("strong",[t._v("-128（-2^7）")]),t._v("；")]),t._v(" "),a("li",[t._v("最大值是 "),a("strong",[t._v("127（2^7-1）")]),t._v("；")]),t._v(" "),a("li",[t._v("默认值是 "),a("strong",[t._v("0")]),t._v("；")]),t._v(" "),a("li",[t._v("byte 类型用在大型数组中节约空间，主要代替整数，因为 byte 变量占用的空间只有 int 类型的四分之一；")]),t._v(" "),a("li",[t._v("例子：byte a = 100，byte b = -50。")])]),t._v(" "),a("h3",{attrs:{id:"short"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#short"}},[t._v("#")]),t._v(" short")]),t._v(" "),a("ul",[a("li",[t._v("short 数据类型是 16 位、有符号的以二进制补码表示的整数")]),t._v(" "),a("li",[t._v("最小值是 "),a("strong",[t._v("-32768（-2^15）")]),t._v("；")]),t._v(" "),a("li",[t._v("最大值是 "),a("strong",[t._v("32767（2^15 - 1）")]),t._v("；")]),t._v(" "),a("li",[t._v("Short 数据类型也可以像 byte 那样节省空间。一个short变量是int型变量所占空间的二分之一；")]),t._v(" "),a("li",[t._v("默认值是 "),a("strong",[t._v("0")]),t._v("；")]),t._v(" "),a("li",[t._v("例子：short s = 1000，short r = -20000。")])]),t._v(" "),a("h3",{attrs:{id:"int"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#int"}},[t._v("#")]),t._v(" int")]),t._v(" "),a("ul",[a("li",[t._v("int 数据类型是32位、有符号的以二进制补码表示的整数；")]),t._v(" "),a("li",[t._v("最小值是 "),a("strong",[t._v("-2,147,483,648（-2^31）")]),t._v("；")]),t._v(" "),a("li",[t._v("最大值是 "),a("strong",[t._v("2,147,483,647（2^31 - 1）")]),t._v("；")]),t._v(" "),a("li",[t._v("一般地整型变量默认为 int 类型；")]),t._v(" "),a("li",[t._v("默认值是 "),a("strong",[t._v("0")]),t._v(" ；")]),t._v(" "),a("li",[t._v("例子：int a = 100000, int b = -200000。")])]),t._v(" "),a("h3",{attrs:{id:"long"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#long"}},[t._v("#")]),t._v(" long")]),t._v(" "),a("ul",[a("li",[t._v("long 数据类型是 64 位、有符号的以二进制补码表示的整数；")]),t._v(" "),a("li",[t._v("最小值是 "),a("strong",[t._v("-9,223,372,036,854,775,808（-2^63）")]),t._v("；")]),t._v(" "),a("li",[t._v("最大值是 "),a("strong",[t._v("9,223,372,036,854,775,807（2^63 -1）")]),t._v("；")]),t._v(" "),a("li",[t._v("这种类型主要使用在需要比较大整数的系统上；")]),t._v(" "),a("li",[t._v("默认值是 "),a("strong",[t._v("0L")]),t._v("；")]),t._v(" "),a("li",[t._v("例子： "),a("strong",[t._v("long a = 100000L")]),t._v("，"),a("strong",[t._v("long b = -200000L")]),t._v('。\n"L"理论上不分大小写，但是若写成"l"容易与数字"1"混淆，不容易分辩。所以最好大写。')])]),t._v(" "),a("h3",{attrs:{id:"float"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#float"}},[t._v("#")]),t._v(" float")]),t._v(" "),a("ul",[a("li",[t._v("float 数据类型是单精度、32位、符合IEEE 754标准的浮点数；")]),t._v(" "),a("li",[t._v("float 在储存大型浮点数组的时候可节省内存空间；")]),t._v(" "),a("li",[t._v("默认值是 "),a("strong",[t._v("0.0f")]),t._v("；")]),t._v(" "),a("li",[t._v("浮点数不能用来表示精确的值，如货币；")]),t._v(" "),a("li",[t._v("例子：float f1 = 234.5f。")])]),t._v(" "),a("h3",{attrs:{id:"double"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#double"}},[t._v("#")]),t._v(" double")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("double 数据类型是双精度、64 位、符合 IEEE 754 标准的浮点数；")])]),t._v(" "),a("li",[a("p",[t._v("浮点数的默认类型为 double 类型；")])]),t._v(" "),a("li",[a("p",[t._v("double类型同样不能表示精确的值，如货币；")])]),t._v(" "),a("li",[a("p",[t._v("默认值是 "),a("strong",[t._v("0.0d")]),t._v("；")])]),t._v(" "),a("li",[a("p",[t._v("例子：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v("   d1  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7D")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v("   d2  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v("   d3  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v("   d4  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.D")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v("   d5  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.9867")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("7 是一个 int 字面量，而 7D，7. 和 8.0 是 double 字面量。")])])]),t._v(" "),a("h3",{attrs:{id:"boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[t._v("#")]),t._v(" boolean")]),t._v(" "),a("ul",[a("li",[t._v("boolean数据类型表示一位的信息；")]),t._v(" "),a("li",[t._v("只有两个取值：true 和 false；")]),t._v(" "),a("li",[t._v("这种类型只作为一种标志来记录 true/false 情况；")]),t._v(" "),a("li",[t._v("默认值是 "),a("strong",[t._v("false")]),t._v("；")]),t._v(" "),a("li",[t._v("例子：boolean one = true。")])]),t._v(" "),a("h3",{attrs:{id:"char"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#char"}},[t._v("#")]),t._v(" char")]),t._v(" "),a("ul",[a("li",[t._v("char 类型是一个单一的 16 位 Unicode 字符；")]),t._v(" "),a("li",[t._v("最小值是 "),a("strong",[t._v("\\u0000")]),t._v("（十进制等效值为 0）；")]),t._v(" "),a("li",[t._v("最大值是 "),a("strong",[t._v("\\uffff")]),t._v("（即为 65535）；")]),t._v(" "),a("li",[t._v("char 数据类型可以储存任何字符；")]),t._v(" "),a("li",[t._v("例子：char letter = 'A';。")])]),t._v(" "),a("h2",{attrs:{id:"_2-引用类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-引用类型"}},[t._v("#")]),t._v(" 2 引用类型")]),t._v(" "),a("ul",[a("li",[t._v("在Java中，引用类型的变量非常类似于C/C++的指针。"),a("strong",[t._v("引用类型指向一个对象，指向对象的变量是引用变量")]),t._v("。这些变量在声明时被指定为一个特定的类型，比如 Employee、Puppy 等。变量一旦声明后，类型就不能被改变了。")]),t._v(" "),a("li",[t._v("对象、数组都是引用数据类型。")]),t._v(" "),a("li",[t._v("所有引用类型的默认值都是null。")]),t._v(" "),a("li",[t._v("一个引用变量可以用来引用任何与之兼容的类型。")]),t._v(" "),a("li",[t._v('例子：Site site = new Site("Runoob")。')])]),t._v(" "),a("h2",{attrs:{id:"_3-java常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-java常量"}},[t._v("#")]),t._v(" 3 Java常量")]),t._v(" "),a("p",[t._v("常量在程序运行时是不能被修改的。")]),t._v(" "),a("p",[t._v("在 Java 中使用 final 关键字来修饰常量，声明方式和变量类似：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1415927")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("虽然常量名也可以用小写，但为了便于识别，通常使用大写字母表示常量。")]),t._v(" "),a("h2",{attrs:{id:"_4-自动类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-自动类型转换"}},[t._v("#")]),t._v(" 4 自动类型转换")]),t._v(" "),a("p",[a("strong",[t._v("整型、实型（常量）、字符型数据可以混合运算。运算中，不同类型的数据先转化为同一类型，然后进行运算。")])]),t._v(" "),a("p",[t._v("转换从低级到高级。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("低  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  高\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v("—"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" —"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v("—"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" —"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("数据类型转换必须满足如下规则：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("不能对boolean类型进行类型转换。")])]),t._v(" "),a("li",[a("p",[t._v("不能把对象类型转换成不相关类的对象。")])]),t._v(" "),a("li",[a("p",[t._v("在把容量大的类型转换为容量小的类型时必须使用强制类型转换。")])]),t._v(" "),a("li",[a("p",[t._v("转换过程中可能导致溢出或损失精度，例如：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("因为 byte 类型是 8 位，最大值为127，所以当 int 强制转换为 byte 类型时，值 128 时候就会导致溢出。")])]),t._v(" "),a("li",[a("p",[t._v("浮点数到整数的转换是通过舍弃小数得到，而不是四舍五入，例如：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23.7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("45.89f")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"自动类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动类型转换"}},[t._v("#")]),t._v(" 自动类型转换")]),t._v(" "),a("p",[t._v("必须满足转换前的数据类型的位数要低于转换后的数据类型，例如: short数据类型的位数为16位，就可以自动转换位数为32的int类型，同样float数据类型的位数为32，可以自动转换为64位的double类型。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义一个char类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//char自动类型转换为int    i1 = 97")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义一个char类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//char 类型和 int 类型计算  i2 = 66")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("blockquote",[a("p",[t._v("c1 的值为字符 "),a("strong",[t._v("a")]),t._v(" ，查 ASCII 码表可知对应的 int 类型值为 97， A 对应值为 65")])]),t._v(" "),a("h3",{attrs:{id:"强制类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制类型转换"}},[t._v("#")]),t._v(" 强制类型转换")]),t._v(" "),a("p",[t._v("条件是转换的数据类型必须是兼容的。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("i1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//强制类型转换为byte")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"_5-常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-常见问题"}},[t._v("#")]),t._v(" 5 常见问题")]),t._v(" "),a("h3",{attrs:{id:"字符型常量和字符串常量的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符型常量和字符串常量的区别"}},[t._v("#")]),t._v(" 字符型常量和字符串常量的区别")]),t._v(" "),a("ol",[a("li",[t._v("形式上：字符单引号引起一个字符，字符串双引号引起若干个字符")]),t._v(" "),a("li",[t._v("含以上：字符常量相当于一个整型值（ASCII码），可以参加表达式运算；字符串常量代表一个地址值（该字符串在内存中存放位置）")]),t._v(" "),a("li",[t._v("占内存大小：字符占2个字节；字符串占若干个字节。")])]),t._v(" "),a("h3",{attrs:{id:"浮点运算出现误差、精度丢失的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点运算出现误差、精度丢失的问题"}},[t._v("#")]),t._v(" 浮点运算出现误差、精度丢失的问题")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/zouquchen/Images/main/imgs2022/float_structure.png",alt:"image-20220712210326310"}})]),t._v(" "),a("p",[t._v("float类型占用32位，单精度浮点表示法：")]),t._v(" "),a("ul",[a("li",[t._v("符号位sign：1位，0表示正数，1表示负数")]),t._v(" "),a("li",[t._v("指数位exponent：8位，用来表示指数")]),t._v(" "),a("li",[t._v("小数位fraction：23位，用来表示小数，不足补零。")])]),t._v(" "),a("p",[t._v("浮点一般采用"),a("strong",[t._v("科学计数法")]),t._v("表示，而且我们常用的浮点都是很标准的，小数位几位，幂次几位等，所以随着数字数量级的增大，它能精确到的实际数字就会越来越粗糙，会出现"),a("strong",[t._v("大数吃小数")]),t._v("的问题；")]),t._v(" "),a("p",[t._v("计算机内部是使用二进制表示浮点数的，而我们平时都是采用十进制表示数字，"),a("strong",[t._v("二进制不能以有限位数来表示任意有限位数的十进制")]),t._v("，如0.1。因此金额运算一般都不会采用浮点，比如Java内就提供了"),a("code",[t._v("BigDecimal")]),t._v("进行任意精度的浮点运算。")]),t._v(" "),a("h3",{attrs:{id:"如果商业运算会用什么数据类型-你知道它是怎么解决精度问题的吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果商业运算会用什么数据类型-你知道它是怎么解决精度问题的吗"}},[t._v("#")]),t._v(" 如果商业运算会用什么数据类型？你知道它是怎么解决精度问题的吗")]),t._v(" "),a("p",[t._v("BigDecimal")]),t._v(" "),a("p",[t._v("原理是，通过一个大整数来存储有效数字，再利用一个放缩因子来存储这个大整数实际上是精确到小数点后多少位。BigDecimal所代表的数字，就是这个 intVal * 10^(-scale)")]),t._v(" "),a("p",[t._v("BigInteger")]),t._v(" "),a("p",[t._v("符号位，通过一个int类型的数组来存储数据。")])])}),[],!1,null,null,null);a.default=v.exports}}]);