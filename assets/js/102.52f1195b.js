(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{425:function(t,v,s){"use strict";s.r(v);var _=s(8),r=Object(_.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"mysql架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mysql架构"}},[t._v("#")]),t._v(" MySQL架构")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("前言")]),t._v(" "),v("p",[t._v("目前大部分的后端开发人员对 "),v("code",[t._v("MySQL")]),t._v(" 的了解和使用只停留在建库、建表、建索引，执行各种增删改查操作，完全不了解内部的架构和原理。下面我们就来简单了解以下MySQL的架构。")])]),t._v(" "),v("p",[t._v("文章参考："),v("a",{attrs:{href:"https://mp.weixin.qq.com/s/R-1km7r0z3oWfwYQV8iiqA",target:"_blank",rel:"noopener noreferrer"}},[t._v("重学MySQL系列01-揭开面纱，显露架构"),v("OutboundLink")],1)]),t._v(" "),v("h2",{attrs:{id:"整体架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#整体架构"}},[t._v("#")]),t._v(" 整体架构")]),t._v(" "),v("p",[t._v("MySql 架构分为 Server 层与存储引擎层")]),t._v(" "),v("ul",[v("li",[t._v("Server 层：负责连接管理、解析与优化这些不涉及读写数据的操作，后面将详细介绍 Server 层")]),t._v(" "),v("li",[t._v("存储引擎层：负责读写数据，我们了解的存储的引擎有 InnoDB 和 MyISAM")])]),t._v(" "),v("p",[t._v("整体架构如下图所示，下面我们就详细看看 MYSQL 的 Server 层到底做了什么：")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/zouquchen/Images/main/imgs2022/MySQL-strcuture1.png",alt:"image-20220816112515679"}})]),t._v(" "),v("h2",{attrs:{id:"连接管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#连接管理"}},[t._v("#")]),t._v(" 连接管理")]),t._v(" "),v("p",[t._v("系统（客户端）访问 MySQL 服务器前，做的第一件事就是建立 TCP 连接。")]),t._v(" "),v("p",[t._v("经过三次握手建立连接成功后，MySQL 服务器对 TCP 传输过来的账号密码做"),v("strong",[t._v("身份认证")]),t._v("、"),v("strong",[t._v("权限获取")]),t._v("。")]),t._v(" "),v("ul",[v("li",[t._v("用户名或密码不对，会收到一个 "),v("code",[t._v("Access denied for user")]),t._v(" 错误，客户端程序结束执行")]),t._v(" "),v("li",[t._v("用户名密码认证通过，会从权限表查出账号拥有的权限与连接关联，之后的权限判断逻辑，都将依赖于此时读到的权限")])]),t._v(" "),v("p",[t._v("同一时刻，可以有多个系统和 MySQL 服务器建立连接，每个系统建立的连接肯定不止一个。所以，为了解决 TCP 无限创建与 TCP 频繁创建销毁带来的资源耗尽、性能下降问题。MySQL 服务器里有专门的 "),v("strong",[t._v("TCP 连接池")]),t._v("限制接数，采用长连接模式复用 TCP 连接，来解决上述问题。")]),t._v(" "),v("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/zouquchen/Images/main/imgs2022/mysql-architecture1.png",alt:"image-20220831161842263"}}),t._v(" "),v("p",[t._v("TCP 连接收到请求后，必须要分配给一个线程去执行，所以还会有个线程来负责后面的流程。这些内容我们都归纳到 MySQL 的"),v("strong",[t._v("连接管理")]),t._v("组件中。")]),t._v(" "),v("p",[t._v("所以"),v("strong",[t._v("连接管理")]),t._v("的职责是负责"),v("strong",[t._v("认证、管理连接、获取权限信息")]),t._v("。")]),t._v(" "),v("h2",{attrs:{id:"解析与优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解析与优化"}},[t._v("#")]),t._v(" 解析与优化")]),t._v(" "),v("h3",{attrs:{id:"查询缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#查询缓存"}},[t._v("#")]),t._v(" 查询缓存")]),t._v(" "),v("p",[t._v("经过了连接管理，现在 MySQL 服务器已经获取到 SQL 字符串。")]),t._v(" "),v("p",[t._v("如果是查询语句， MySQL 服务器会使用 "),v("code",[t._v("select SQL")]),t._v(" 字符串作为 key 。去缓存中查询：")]),t._v(" "),v("ul",[v("li",[t._v("如果命中缓存则直接返回结果（返回前需要做权限验证）")]),t._v(" "),v("li",[t._v("未命中执行后面的阶段")])]),t._v(" "),v("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/zouquchen/Images/main/imgs2022/mysql-architecture2.png",alt:"image-20220831161823650"}}),t._v(" "),v("p",[t._v("需要注意，"),v("code",[t._v("select SQL")]),t._v("字符串要完全匹配，有任何不同的地方都会导致缓存不被命中（"),v("strong",[t._v("空格、注释、大小写、某些系统函数")]),t._v("）")]),t._v(" "),v("blockquote",[v("p",[t._v("小贴士：虽然查询缓存有时可以提升系统性能，但也不得不因维护这块缓存而造成一些开销，从MySQL 5.7.20开始，不推荐使用查询缓存，并在MySQL 8.0中删除。")])]),t._v(" "),v("h3",{attrs:{id:"分析器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分析器"}},[t._v("#")]),t._v(" 分析器")]),t._v(" "),v("p",[t._v("没有命中缓存，或者非 "),v("code",[t._v("select SQL")]),t._v(" 就来到"),v("strong",[t._v("分析器")]),t._v("阶段了。因为系统发送过来的只是一段文本字符串，所以 MySQL 服务器要按照 SQL 语法对这段文本进行解析。")]),t._v(" "),v("p",[t._v("如果你的 SQL 字符串不符合语法规范，就会收到  "),v("code",[t._v("You have an error in your SQL syntax")]),t._v("  错误提醒")]),t._v(" "),v("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/zouquchen/Images/main/imgs2022/mysql-architecture3.png",alt:"image-20220831161906166"}}),t._v(" "),v("h3",{attrs:{id:"优化器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优化器"}},[t._v("#")]),t._v(" 优化器")]),t._v(" "),v("p",[t._v("通过了"),v("strong",[t._v("分析器")]),t._v("，说明"),v("code",[t._v("SQL")]),t._v("字符串符合语法规范，现在 MySQL 服务器要执行 SQL 语句了。首先需要产出执行计划，交给 MySQL 服务器执行，所以来到了"),v("strong",[t._v("优化器")]),t._v("阶段。")]),t._v(" "),v("p",[t._v("优化器不仅仅只是生成执行计划这么简单，这个过程它会帮你优化 SQL 语句。如"),v("strong",[t._v("外连接转换为内连接、表达式简化、子查询转为连接、连接顺序、索引选择")]),t._v("等一堆东西，优化的结果就是执行计划。")]),t._v(" "),v("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/zouquchen/Images/main/imgs2022/mysql-architecture4.png",alt:"image-20220831161937255"}}),t._v(" "),v("h3",{attrs:{id:"执行器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#执行器"}},[t._v("#")]),t._v(" 执行器")]),t._v(" "),v("p",[t._v("截止到现在，还没有真正去读写真实的表，仅仅只是产出了一个执行计划。于是就进入了"),v("strong",[t._v("执行器")]),t._v("阶段， MySQL 服务器终于要执行 SQL 语句了。")]),t._v(" "),v("p",[t._v("开始执行的时候，要先判断一下对这个表有没有相应的权限，如果没有，就会返回权限错误。如果有权限，根据执行计划调用存储引擎 API 对表进行的读写。")]),t._v(" "),v("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/zouquchen/Images/main/imgs2022/mysql-architecture5.png",alt:"image-20220831161955629"}}),t._v(" "),v("p",[t._v("存储引擎 API 只是抽象接口，下面还有个"),v("strong",[t._v("存储引擎层")]),t._v("，具体实现还是要看表选择的存储引擎。")]),t._v(" "),v("h2",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("p",[t._v("MySql 架构分为 Server 层与存储引擎层")]),t._v(" "),v("ul",[v("li",[t._v("Server 层：负责连接管理、解析与优化\n"),v("ul",[v("li",[t._v("连接管理：负责认证、管理连接、获取权限信息")]),t._v(" "),v("li",[t._v("解析与优化：查询缓存、SQL语法解析验证、SQL优化并生成执行计划、根据执行计划调用存储引擎接口")])])]),t._v(" "),v("li",[t._v("存储引擎层：负责读写数据")])]),t._v(" "),v("p",[t._v("通过这种架构设计，我们发现 Server 层其实就是公用层，存储引擎层就是多态层，按需选择具体的存储引擎。")]),t._v(" "),v("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/zouquchen/Images/main/imgs2022/mysql-architecture6.png",alt:"image-20220831162013894"}})])}),[],!1,null,null,null);v.default=r.exports}}]);