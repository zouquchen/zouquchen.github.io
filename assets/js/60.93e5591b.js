(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{383:function(t,a,s){"use strict";s.r(a);var v=s(8),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"jvm-性能调优工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm-性能调优工具"}},[t._v("#")]),t._v(" JVM 性能调优工具")]),t._v(" "),a("p",[t._v("JDK本身提供了很多方便的 JVM 性能调优监控工具，除了集成式的 VisualVM 和 jConsole 外，还有 jps、jstack、jmap、jhat、jstat、hprof 等小巧的工具，每一种工具都有其自身的特点，用户可以根据你需要检测的应用或者程序片段的状况，适当的选择相应的工具进行检测。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("命令")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("jps")]),t._v(" "),a("td",[t._v("基础工具")])]),t._v(" "),a("tr",[a("td",[t._v("jstack")]),t._v(" "),a("td",[t._v("查看某个Java进程内的线程堆栈信息")])]),t._v(" "),a("tr",[a("td",[t._v("jmap")]),t._v(" "),a("td",[t._v("jmap导出堆内存，然后使用jhat来进行分析")])]),t._v(" "),a("tr",[a("td",[t._v("jhat")]),t._v(" "),a("td",[t._v("jmap导出堆内存，然后使用jhat来进行分析")])]),t._v(" "),a("tr",[a("td",[t._v("jstat")]),t._v(" "),a("td",[t._v("JVM统计监测工具")])]),t._v(" "),a("tr",[a("td",[t._v("hprof")]),t._v(" "),a("td",[t._v("hprof能够展现CPU使用率，统计堆内存使用情况")])])])]),t._v(" "),a("h2",{attrs:{id:"_1-jps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-jps"}},[t._v("#")]),t._v(" 1. jps")]),t._v(" "),a("p",[t._v("JDK提供的一个可以列出正在运行的 JVM 的进程信息的命令行工具，它可以显示 Java 虚拟机进程的执行主类（Main Class，main()函数所在的类）名称、本地虚拟机唯一ID（LVMID，Local Virtual Machine Identifier）等信息。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[root@ls ~]# jps\n2227 lecture-user-0.0.1-SNAPSHOT.jar\n36055 jar\n2375 lecture-order-0.0.1-SNAPSHOT.jar\n2376 lecture-oss-0.0.1-SNAPSHOT.jar\n1708 Jps\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"_2-jstack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-jstack"}},[t._v("#")]),t._v(" 2. jstack")]),t._v(" "),a("p",[t._v("jstack 主要用来查看某个 Java 进程内的线程堆栈信息")]),t._v(" "),a("p",[t._v("命令："),a("code",[t._v("jstack [options] pid")])]),t._v(" "),a("p",[t._v("options 为 jstack 命令的可选参数。如果没有指定这个参数，jstack 命令会显示 Java 虚拟机当前时刻的线程快照信息。")]),t._v(" "),a("ul",[a("li",[t._v("-l：除堆栈外，显示锁的附加信息")]),t._v(" "),a("li",[t._v("-F：当请求不被响应时，强制输出线程堆栈")]),t._v(" "),a("li",[t._v("-m：混合模式，打印 java 和本地 C++ 调用的堆栈信息")])]),t._v(" "),a("h2",{attrs:{id:"_3-jmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-jmap"}},[t._v("#")]),t._v(" 3. jmap")]),t._v(" "),a("p",[t._v("jmap（Memory Map）用来查看堆内存使用状况，一般配合jhat命令使用。")]),t._v(" "),a("p",[t._v("语法")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("jmap [option] pid  \njmap [option] executable core  \njmap [option] [server-id@]remote-hostname-or-ip\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("table",[a("thead",[a("tr",[a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-permstat")]),t._v(" "),a("td",[t._v("打印进程的类加载器和类加载器加载的持久代对象信息")])]),t._v(" "),a("tr",[a("td",[t._v("-heap")]),t._v(" "),a("td",[t._v("查看进程堆内存使用情况:包括使用的GC算法、堆配置参数和各代中堆内存使用")])]),t._v(" "),a("tr",[a("td",[t._v("-histo[:live]")]),t._v(" "),a("td",[t._v("查看堆内存中的对象数目、大小统计直方图，如果带上live则只统计活对象")])]),t._v(" "),a("tr",[a("td",[t._v("-dump:format=b,file=dumpFileName")]),t._v(" "),a("td",[t._v("用jmap把进程内存使用情况dump到文件中，再用jhat分析查看")])])])]),t._v(" "),a("p",[t._v("导出堆内存：如 "),a("code",[t._v("jmap 1114")])]),t._v(" "),a("p",[t._v("查看堆内存使用情况："),a("code",[t._v("jmap -heap pid")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/zouquchen/Images/main/imgs2022/jmap-heap-pid.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("h2",{attrs:{id:"_4-jhat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-jhat"}},[t._v("#")]),t._v(" 4. jhat")]),t._v(" "),a("p",[t._v("jhat 用来对上面 dump 出来的内容进行分析，他会在服务器上开启一个端口作为 web 访问的入口，然后将解析出来的数据已 web 的形式提供访问，这对于某些服务器来说可能不允许其开启端口提供访问。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[esv@storm-master Desktop]# jhat -port 8888 /home/esv/dump.dat   \nReading from /home/esv/dump.dat...  \nDump file created Sat Aug 01 04:21:12 PDT 2015  \nSnapshot read, resolving...  \nResolving 411123 objects...  \nChasing references, expect 82 dots..................................................................................  \nEliminating duplicate references..................................................................................  \nSnapshot resolved.  \nStarted HTTP server on port 8888  \nServer is ready. \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h2",{attrs:{id:"_5-jstat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-jstat"}},[t._v("#")]),t._v(" 5. jstat")]),t._v(" "),a("p",[t._v("检查 JVM 的整体运行情况，如 Eden、Survivor、老年代的内存使用情况，还有 Young GC 和 Full gC 的执行次数以及耗时。")]),t._v(" "),a("p",[t._v("比如命令："),a("code",[t._v("jstat -gc 2227")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[root@ls ~]# jstat -gc 2227\n S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT   \n19456.0 23552.0 12604.5  0.0   136192.0 40299.3   157184.0   76886.5   87040.0 82226.5 11008.0 10188.4     56    1.321   4      0.818    2.139\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("S0C")]),t._v(" "),a("td",[t._v("From Survivor 区的大小")])]),t._v(" "),a("tr",[a("td",[t._v("S1C")]),t._v(" "),a("td",[t._v("To Survivor 区的大小")])]),t._v(" "),a("tr",[a("td",[t._v("S0U")]),t._v(" "),a("td",[t._v("From Survivor 区当前使用的内存大小")])]),t._v(" "),a("tr",[a("td",[t._v("S1U")]),t._v(" "),a("td",[t._v("To Survivor 区当前使用的内存大小")])]),t._v(" "),a("tr",[a("td",[t._v("EC")]),t._v(" "),a("td",[t._v("Eden 区的大小")])]),t._v(" "),a("tr",[a("td",[t._v("EU")]),t._v(" "),a("td",[t._v("Eden 区当前使用的内存大小")])]),t._v(" "),a("tr",[a("td",[t._v("OC")]),t._v(" "),a("td",[t._v("老年代的大小")])]),t._v(" "),a("tr",[a("td",[t._v("OU")]),t._v(" "),a("td",[t._v("老年代当前使用的内存大小")])]),t._v(" "),a("tr",[a("td",[t._v("MC")]),t._v(" "),a("td",[t._v("方法区（永久代、元数据区）的大小")])]),t._v(" "),a("tr",[a("td",[t._v("MU")]),t._v(" "),a("td",[t._v("方法区（永久代、元数据区）的当前使用的内存大小")])]),t._v(" "),a("tr",[a("td",[t._v("YGC")]),t._v(" "),a("td",[t._v("系统运行迄今为止的 Young GC 次数")])]),t._v(" "),a("tr",[a("td",[t._v("YGCT")]),t._v(" "),a("td",[t._v("Young GC 的耗时")])]),t._v(" "),a("tr",[a("td",[t._v("FGC")]),t._v(" "),a("td",[t._v("系统运行迄今为止的 Full GC 次数")])]),t._v(" "),a("tr",[a("td",[t._v("FGCT")]),t._v(" "),a("td",[t._v("Full GC 的耗时")])]),t._v(" "),a("tr",[a("td",[t._v("GCT")]),t._v(" "),a("td",[t._v("所有 GC 的总耗时")])])])]),t._v(" "),a("p",[t._v("比如命令："),a("code",[t._v("jstat -gc PID 1000 10")]),t._v("，每隔1秒钟更新出来最新的一行 jstat 统计信息，一共执行10次 jstat 统计")])])}),[],!1,null,null,null);a.default=_.exports}}]);