(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{378:function(s,a,t){"use strict";t.r(a);var n=t(8),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"jvm内存区域详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm内存区域详解"}},[s._v("#")]),s._v(" JVM内存区域详解")]),s._v(" "),a("h2",{attrs:{id:"_1-运行时数据区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-运行时数据区"}},[s._v("#")]),s._v(" 1 运行时数据区")]),s._v(" "),a("p",[s._v("Java内存区域就是运行时数据区。")]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/zouquchen/Images/main/imgs2022/JVM-memory.png",alt:"JVM内存区域"}}),s._v(" "),a("p",[s._v("按照线程私有和共享进行区分的话。私有部分包含：程序计数器、虚拟机栈、本地方法栈；共享部分包含：堆、方法区")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("程序计数器")]),s._v("：线程私有，用于记录当前线程下条指令的位置，不会因为线程的切换而忘记当前线程所执行到的位置；分支、循环、跳转、异常处理、线程恢复都需要程序计数器来完成。程序计数器占的空间非常小，并且不会出现 "),a("code",[s._v("OutOfMemeryError")]),s._v("，他会随着线程创建而创建，线程的结束而结束。")]),s._v(" "),a("li",[a("strong",[s._v("虚拟机栈")]),s._v("：线程私有，由一个个栈帧组成，每一个栈帧对应一个方法，每一个方法的调用到执行完成对应着栈帧的入栈和出栈，每个栈帧都包含局部变量表、操作数栈、动态链接、方法返回地址。会出现 "),a("code",[s._v("StackOverFlowError")]),s._v(" 和 OutOfMemeryError` 两种错误。")]),s._v(" "),a("li",[a("strong",[s._v("本地方法栈")]),s._v("：线程私有，虚拟机栈执行的是Java方法，本地方法栈则使用虚拟机的Native方法。本地方法被执行的时候，在本地方法栈也会创建一个栈帧，用于存放本地方法的局部变量表、操作数栈、动态链接、出口信息。也会出现 "),a("code",[s._v("StackOverFlowError")]),s._v(" 和"),a("code",[s._v("OutOfMemoryError")]),s._v(" 两种错误。")]),s._v(" "),a("li",[a("strong",[s._v("堆")]),s._v("：线程共享，存放对象实例，几乎所有对象实例以及数组都在这里分配内存。堆主要分为两部分：新生代（Eden、Survivor）和老生代（Old），分为两部分有利于垃圾回收，因为垃圾回收的主要区域就是堆。")]),s._v(" "),a("li",[a("strong",[s._v("方法区")]),s._v("：用于存储被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。")])]),s._v(" "),a("h3",{attrs:{id:"_1-1-程序计数器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-程序计数器"}},[s._v("#")]),s._v(" 1.1 程序计数器")]),s._v(" "),a("p",[s._v("线程私有，用于记录当前线程下条指令的位置，不会因为线程的切换而忘记当前线程所执行到的位置；分支、循环、跳转、异常处理、线程恢复都需要程序计数器来完成。程序计数器占的空间非常小，并且不会出现 "),a("code",[s._v("OutOfMemeryError")]),s._v("，他会随着线程创建而创建，线程的结束而结束。")]),s._v(" "),a("h3",{attrs:{id:"_1-2-虚拟机栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-虚拟机栈"}},[s._v("#")]),s._v(" 1.2 虚拟机栈")]),s._v(" "),a("p",[s._v("线程私有，由一个个栈帧组成，每一个栈帧对应一个方法，每一个方法的调用到执行完成对应着栈帧的入栈和出栈，每个栈帧都包含局部变量表、操作数栈、动态链接、方法返回地址。会出现 "),a("code",[s._v("StackOverFlowError")]),s._v(" 和 "),a("code",[s._v("OutOfMemeryError")]),s._v(" 两种错误。")]),s._v(" "),a("p",[a("code",[s._v("StackOverFlowError")]),s._v("：线程请求的栈深度大于虚拟机所运行的最大深度。")]),s._v(" "),a("p",[a("code",[s._v("OutOfMemoryError")]),s._v("：扩展栈容量无法申请到足够的内存时。HotSpot虚拟机不支持动态扩展栈，所以不会出现这个异常。")]),s._v(" "),a("p",[a("strong",[s._v("JVM 虚拟机栈的参数设置")])]),s._v(" "),a("p",[a("code",[s._v("-Xss")]),s._v(" 等价于 "),a("code",[s._v("-XX:ThreadStackSize")])]),s._v(" "),a("p",[s._v("设置方法："),a("code",[s._v("-Xss128k")]),s._v("，设置单个线程栈的大小，一般默认值为 512k ~ 1024k")]),s._v(" "),a("h4",{attrs:{id:"局部变量表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局部变量表"}},[s._v("#")]),s._v(" 局部变量表")]),s._v(" "),a("p",[s._v("主要存放了编译期可知的各种数据类型（boolean、byte、char、short、int、float、long、double）、对象引用（reference 类型，它不同于对象本身，可能是一个指向对象起始地址的引用指针，也可能是指向一个代表对象的句柄或其他与此对象相关的位置）。")]),s._v(" "),a("h4",{attrs:{id:"动态链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态链接"}},[s._v("#")]),s._v(" 动态链接")]),s._v(" "),a("p",[s._v("主要服务一个方法需要调用其他方法的场景。在 Java 源文件被编译成字节码文件时，所有的变量和方法引用都作为符号引用保存在 Class 文件的常量池里。当一个方法要调用其他方法，需要将常量池中指向方法的符号引用转化为其在内存地址中的直接引用。动态链接的作用就是为了将符号引用转换为调用方法的直接引用。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/zouquchen/Images/main/imgs2022/JVM-dynamic-connection.png",alt:"image-20220715162225937"}})]),s._v(" "),a("h4",{attrs:{id:"操作数栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作数栈"}},[s._v("#")]),s._v(" 操作数栈")]),s._v(" "),a("p",[s._v("主要作为方法调用的中转站使用，用于存放方法执行过程中产生的中间计算结果。另外，计算过程中产生的临时变量也会放在操作数栈中。")]),s._v(" "),a("h4",{attrs:{id:"方法返回地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法返回地址"}},[s._v("#")]),s._v(" 方法返回地址")]),s._v(" "),a("p",[s._v("返回方法被调用的位置。")]),s._v(" "),a("h3",{attrs:{id:"_1-3-本地方法栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-本地方法栈"}},[s._v("#")]),s._v(" 1.3 本地方法栈")]),s._v(" "),a("p",[s._v("线程私有，虚拟机栈执行的是 Java 方法，本地方法栈则使用虚拟机的 Native 方法。本地方法被执行的时候，在本地方法栈也会创建一个栈帧，用于存放本地方法的局部变量表、操作数栈、动态链接、出口信息。也会出现 "),a("code",[s._v("StackOverFlowError")]),s._v(" 和 "),a("code",[s._v("OutOfMemoryError")]),s._v(" 两种错误。")]),s._v(" "),a("p",[a("code",[s._v("StackOverFlowError")]),s._v("：线程请求的栈深度大于虚拟机所运行的最大深度。")]),s._v(" "),a("p",[a("code",[s._v("OutOfMemoryError")]),s._v("：扩展栈容量无法申请到足够的内存时。HotSpot虚拟机不支持动态扩展栈，所以不会出现这个异常。")]),s._v(" "),a("h3",{attrs:{id:"_1-4-堆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-堆"}},[s._v("#")]),s._v(" 1.4 堆")]),s._v(" "),a("p",[s._v("线程共享，存放对象实例，几乎所有对象实例以及数组都在这里分配内存。堆主要分为两部分：新生代（Eden、Survivor）和老生代（Old），分为两部分有利于垃圾回收，因为垃圾回收的主要区域就是堆。")]),s._v(" "),a("p",[s._v("堆最容易出现的就是 "),a("code",[s._v("OutOfMemoryError")]),s._v(" 错误，并且出现这种错误之后的表现形式还会有几种，比如：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("java.lang.OutOfMemoryError: GC Overhead Limit Exceeded")]),s._v(" ： 当 JVM 花太多时间执行垃圾回收并且只能回收很少的堆空间时，就会发生此错误。")]),s._v(" "),a("li",[a("code",[s._v("java.lang.OutOfMemoryError: Java heap space")]),s._v(" ：假如在创建新的对象时, 堆内存中的空间不足以存放新创建的对象, 就会引发此错误。")])]),s._v(" "),a("p",[a("strong",[s._v("JVM 堆的参数设置")])]),s._v(" "),a("p",[s._v("🔑 "),a("code",[s._v("-Xms")]),s._v(" 等价于 "),a("code",[s._v("-XX:InitialHeapSize")])]),s._v(" "),a("p",[s._v("表示初始化堆大小，一旦对象容量超过堆的初始容量，JAVA 堆会自动扩容到 -Xmx 大小。默认值为物理内存的 1/64。")]),s._v(" "),a("p",[s._v("🔑 "),a("code",[s._v("-Xmx")]),s._v(" 等价于 "),a("code",[s._v("-XX:MaxHeapSize")])]),s._v(" "),a("p",[s._v("表示堆可以扩展到的最大值，在很多情况下，通常将 -Xms 和 -Xmx 设置成一样的，因为当堆不够用而发生扩容时，会发生内存抖动影响程序运行时的稳定性。默认值为物理内存的 1/4。")]),s._v(" "),a("p",[s._v("将堆内存设置为 20MB："),a("code",[s._v("-Xms20m -Xmx20m")])]),s._v(" "),a("h3",{attrs:{id:"_1-5-方法区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-方法区"}},[s._v("#")]),s._v(" 1.5 方法区")]),s._v(" "),a("p",[s._v("用于存储被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。")]),s._v(" "),a("ul",[a("li",[s._v("JDK1.8：在元空间内，直接使用内存，内存受系统的限制。")]),s._v(" "),a("li",[s._v("JDK1.7：方法区与堆地址相连，实现方式是永久代")])]),s._v(" "),a("h2",{attrs:{id:"_2-常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-常见问题"}},[s._v("#")]),s._v(" 2 常见问题")]),s._v(" "),a("h3",{attrs:{id:"java堆溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java堆溢出"}},[s._v("#")]),s._v(" Java堆溢出")]),s._v(" "),a("p",[s._v("🔶 "),a("strong",[s._v("原理")]),s._v("：Java堆用于存储对象实例，通过不断地创建对象，并且保证创建的对象不会被垃圾回收机制回收，那么随着对象数量的增加，总容量触及最大堆的容量限制后就会产生内存溢出异常")]),s._v(" "),a("p",[s._v("🔶 "),a("strong",[s._v("设置JVM参数")]),s._v("：堆的最大值和最小值均设置为 1MB，通过参数 "),a("code",[s._v("-XX:+HeapDumpOnOutOfMemoryError")]),s._v(" 可以让虚拟机在出现内存溢出异常的时候 Dump 出当前的内存堆转存快照以便事后分析")]),s._v(" "),a("div",{staticClass:"language-VM line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("-Xms1m -Xmx1m -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGCDetails\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("🔶 Java代码")])]),s._v(" "),a("div",{staticClass:"language-Java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OOMTest")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("public static void main(String[] args) {\n    List<Object> list = new ArrayList<>();\n    while (true) {\n        list.add(new Object());\n    }\n}\n")])])]),a("p",[s._v("🔶 "),a("strong",[s._v("控制台输出")])]),s._v(" "),a("div",{staticClass:"language-Output line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('java.lang.OutOfMemoryError: Java heap space\nDumping heap to java_pid25616.hprof ...\nHeap dump file created [2466309 bytes in 0.006 secs]\nException in thread "main" java.lang.OutOfMemoryError: Java heap space\n')])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("异常为 "),a("code",[s._v("java.lang.OutOfMemoryError: Java heap space")]),s._v("，表示堆溢出。")]),s._v(" "),a("h3",{attrs:{id:"虚拟机栈和本地方法栈溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机栈和本地方法栈溢出"}},[s._v("#")]),s._v(" 虚拟机栈和本地方法栈溢出")]),s._v(" "),a("p",[s._v("🔶 "),a("strong",[s._v("原理")]),s._v("：通过递归不断调用，相当于往栈种不断加入栈帧，直到达到栈的最大值。")]),s._v(" "),a("p",[s._v("🔶 "),a("strong",[s._v("设置JVM参数")]),s._v("：设置栈空间空间大小。")]),s._v(" "),a("div",{staticClass:"language-VM line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("-Xss128k\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("🔶 Java代码")])]),s._v(" "),a("div",{staticClass:"language-Java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OOMTest")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OOMTest")]),s._v(" oomTest "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OOMTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        oomTest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("🔶 "),a("strong",[s._v("控制台输出")])]),s._v(" "),a("p",[a("strong",[s._v("垃圾回收详情")])]),s._v(" "),a("div",{staticClass:"language-Output line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[GC (Allocation Failure) [PSYoungGen: 509K->464K(1024K)] 509K->464K(1536K), 0.0012068 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] \n[GC (Allocation Failure) [PSYoungGen: 966K->432K(1024K)] 966K->432K(1536K), 0.0038625 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n[GC (Allocation Failure) [PSYoungGen: 938K->512K(1024K)] 938K->560K(1536K), 0.0023008 secs] [Times: user=0.01 sys=0.00, real=0.00 secs] \n[GC (Allocation Failure) [PSYoungGen: 1023K->498K(1024K)] 1071K->794K(1536K), 0.0010295 secs] [Times: user=0.01 sys=0.00, real=0.00 secs] \n[Full GC (Ergonomics) [PSYoungGen: 498K->468K(1024K)] [ParOldGen: 296K->248K(512K)] 794K->717K(1536K), [Metaspace: 3138K->3138K(1056768K)], 0.0057444 secs] [Times: user=0.02 sys=0.00, real=0.00 secs] \n[GC (Allocation Failure) --[PSYoungGen: 820K->820K(1024K)] 1069K->1325K(1536K), 0.0014325 secs] [Times: user=0.01 sys=0.00, real=0.00 secs] \n[Full GC (Ergonomics) [PSYoungGen: 820K->0K(1024K)] [ParOldGen: 504K->471K(512K)] 1325K->471K(1536K), [Metaspace: 3155K->3155K(1056768K)], 0.0113762 secs] [Times: user=0.02 sys=0.00, real=0.01 secs] \n[Full GC (Ergonomics) [PSYoungGen: 445K->432K(1024K)] [ParOldGen: 471K->471K(512K)] 916K->903K(1536K), [Metaspace: 3162K->3162K(1056768K)], 0.0092557 secs] [Times: user=0.04 sys=0.00, real=0.01 secs] \n[Full GC (Allocation Failure) [PSYoungGen: 432K->432K(1024K)] [ParOldGen: 471K->461K(512K)] 903K->894K(1536K), [Metaspace: 3162K->3162K(1056768K)], 0.0101378 secs] [Times: user=0.04 sys=0.00, real=0.01 secs] \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[a("code",[s._v("GC (Allocation Failure)")]),s._v("：因为内存分配失败导致垃圾回收，只有年轻代发生了垃圾回收，所以是 Minor GC\n"),a("code",[s._v("Full GC (Ergonomics)")]),s._v("：年轻代和老年代同时进行垃圾回收")]),s._v(" "),a("p",[a("strong",[s._v("错误信息")])]),s._v(" "),a("div",{staticClass:"language-Output line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('Exception in thread "main" java.lang.StackOverflowError\n\tat test.OOMTest.dfs(OOMTest.java:18)\n\t...后续异常堆栈信息省略\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("异常为 "),a("code",[s._v("java.lang.StackOverflowError")]),s._v("，表示栈溢出。")]),s._v(" "),a("h3",{attrs:{id:"方法区溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法区溢出"}},[s._v("#")]),s._v(" 方法区溢出")]),s._v(" "),a("p",[s._v("对于JDK1.6来说，字符串常量池存储在方法区中，所以我们可以通过不断的往字符串常量池中添加字符串使方法区溢出。")]),s._v(" "),a("h3",{attrs:{id:"元空间溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元空间溢出"}},[s._v("#")]),s._v(" 元空间溢出")]),s._v(" "),a("p",[s._v("🔶 "),a("strong",[s._v("原理")]),s._v("：方法区的主要职责是用来存放类型的相关信息，如类名、访问修饰符、常量池、字段描述、方法描述等。我们可以在运行时通过反射创建大量的类区填满方法区直到溢出为止。")]),s._v(" "),a("p",[s._v("🔶 "),a("strong",[s._v("设置JVM参数")]),s._v("：方法区是在元空间内，所以需要设置元空间的最大值，单位为字节。")]),s._v(" "),a("div",{staticClass:"language-VM line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("-XX:MaxMetaspaceSize=10240000\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("🔶 Java代码")]),s._v("：需要引入Cglib依赖，通过Cglib反射创建对象")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OOMTest")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Enhancer")]),s._v(" enhancer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Enhancer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            enhancer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setSuperclass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            enhancer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setUseCache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            enhancer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MethodInterceptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("intercept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Method")]),s._v(" method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MethodProxy")]),s._v(" methodProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Throwable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" methodProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("invokeSuper")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" enhancer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("🔶  "),a("strong",[s._v("控制台输出")])]),s._v(" "),a("div",{staticClass:"language-Output line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('Exception in thread "main" java.lang.OutOfMemoryError: Metaspace\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("异常为 "),a("code",[s._v("java.lang.OutOfMemoryError: Metaspace")]),s._v("，表示元空间溢出。")]),s._v(" "),a("h3",{attrs:{id:"本地方法栈有什么用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地方法栈有什么用"}},[s._v("#")]),s._v(" 本地方法栈有什么用")]),s._v(" "),a("p",[s._v("本地方法栈与虚拟机栈所发挥的作用非常相似，区别只是虚拟机栈为虚拟机执行 Java 方法服务，而本地方法栈则是为了虚拟机使用本地方法服务。")]),s._v(" "),a("h3",{attrs:{id:"没有程序计数器会怎么样"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没有程序计数器会怎么样"}},[s._v("#")]),s._v(" 没有程序计数器会怎么样")]),s._v(" "),a("p",[s._v("Java 程序中的流程控制无法得到正确的控制，多线程也无法正确的轮换。")]),s._v(" "),a("h3",{attrs:{id:"类存放在哪里"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类存放在哪里"}},[s._v("#")]),s._v(" 类存放在哪里")]),s._v(" "),a("p",[s._v("方法区，用于存储已被虚拟机加载的类型信息、常量、静态变量、即时编译器编译后的代码缓存等数据。")]),s._v(" "),a("h3",{attrs:{id:"为什么要废弃永久代-引入元空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要废弃永久代-引入元空间"}},[s._v("#")]),s._v(" 为什么要废弃永久代，引入元空间？")]),s._v(" "),a("p",[s._v("在原来的永久代划分中，永久代需要存放类的元数据、静态变量和常量等。它的大小不容易确定，因为这其中有很多影响因素，比如类的总数，常量池的大小和方法数量等，-XX:MaxPermSize 指定太小很容易造成永久代内存溢出。")]),s._v(" "),a("p",[s._v("移除永久代是为融合 HotSpot VM 与 JRockit VM 而做出的努力，因为JRockit没有永久代，不需要配置永久代。永久代会为GC带来不必要的复杂度，并且回收效率偏低。")]),s._v(" "),a("p",[a("strong",[s._v("最大的区别在于：元空间并不在虚拟机中，而是使用本地内存")]),s._v("。")])])}),[],!1,null,null,null);a.default=e.exports}}]);